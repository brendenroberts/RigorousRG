LIBRARY_DIR=$(HOME)/ITensor
ARPACKPP_INC=$(HOME)/arpackpp/include

APP=rrg

HEADERS=../rrg.h

# Uncomment this line if you do not have ARPACK++ installed
# NO_ARPACK = 1

#################################################################
#################################################################
#################################################################
#################################################################

ifeq ($(NO_ARPACK),1)
    CCFILES=$(APP).cpp ../util.cpp ../trotter.cpp \
	../tensorProdH.cpp ../svdL.cpp ../davidson.cpp
    C2FLAGS= -I.. -Wno-unused-function
else
    CCFILES=$(APP).cpp ../util.cpp ../trotter.cpp \
	../tensorProdH.cpp ../svdL.cpp
    C2FLAGS= -I.. -larpack -I$(ARPACKPP_INC) \
	-Wno-unused-function -Wno-maybe-uninitialized -DUSE_ARPACK
endif

include $(LIBRARY_DIR)/this_dir.mk
include $(LIBRARY_DIR)/options.mk

TENSOR_HEADERS=$(LIBRARY_DIR)/itensor/core.h

#Mappings --------------
OBJECTS=$(patsubst %.cc,%.o, $(CCFILES))
GOBJECTS=$(patsubst %,.debug_objs/%, $(OBJECTS))

#Rules ------------------

%.o: %.cc $(HEADERS) $(TENSOR_HEADERS)
	$(CCCOM) -c $(CCFLAGS) $(C2FLAGS) -o $@ $<

.debug_objs/%.o: %.cc $(HEADERS) $(TENSOR_HEADERS)
	$(CCCOM) -c $(CCGFLAGS) $(C2FLAGS) -o $@ $<

#Targets -----------------

build: $(APP)
debug: $(APP)-g

$(APP): $(OBJECTS) $(ITENSOR_LIBS)
	$(CCCOM) $(CCFLAGS) $(C2FLAGS) $(OBJECTS) -o $(APP) $(LIBFLAGS)

$(APP)-g: mkdebugdir $(GOBJECTS) $(ITENSOR_GLIBS)
	$(CCCOM) $(CCGFLAGS) $(GOBJECTS) -o $(APP)-g $(LIBGFLAGS)

clean:
	rm -fr .debug_objs *.o $(APP) $(APP)-g

mkdebugdir:
	mkdir -p .debug_objs

